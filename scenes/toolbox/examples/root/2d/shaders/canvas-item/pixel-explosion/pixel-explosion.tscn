[gd_scene load_steps=12 format=3 uid="uid://dmxj6ja54sntr"]

[ext_resource type="Script" path="res://scenes/toolbox/examples/root/2d/shaders/canvas-item/pixel-explosion/pixel-explosion.gd" id="1"]
[ext_resource type="Texture2D" uid="uid://cs5sis827yx5o" path="res://scenes/toolbox/examples/root/2d/shaders/canvas-item/pixel-explosion/assets/pixel-explosion.png" id="2"]

[sub_resource type="Shader" id="5"]
code = "shader_type canvas_item;

uniform sampler2D noise_tex_normal;
uniform sampler2D noise_tex;
uniform float progress : hint_range(0.0, 1.0);
uniform float strength = 1.0;

// If your sprite doesn't have enough space and the explosion gets clipped, 
// you can uncomment this and adjust the scale
//void vertex() {
//	float scale = 3.0;
//	VERTEX *= scale;
//
//	UV *= scale;
//	UV -= (scale - 1.0) / 2.0;
//}

void fragment() {
	vec2 direction = texture(noise_tex_normal, UV).xy; // We're using normal map as direction
	direction -= 0.5; // Since our normal map is a texture, it ranges from 0.0 to 1.0...
	direction *= 2.0; // ...so we're going to make it range from -1.0 to 1.0.
	direction = direction * strength * progress;
	
	// UV for exploded texture
	vec2 tex_size = 1.0 / TEXTURE_PIXEL_SIZE; // Real texture size in pixels
	vec2 uv = floor(UV * tex_size) / (tex_size - 1.0); // Pixelate UV to snap pixels
	uv = uv - direction; // Distort UV
	
	// Texture with exploded UV
	vec4 tex = texture(TEXTURE, uv); 
	
	// Dissolve alpha
	float dissolve = texture(noise_tex, UV).x;
	dissolve = step(progress, dissolve);
	tex.a *= dissolve;
	
	// Border (in case the edge of your sprite stretches, otherwise you can remove this block)
	vec2 border_uv = uv * 2.0 - 1.0;
	border_uv = clamp(abs(border_uv), 0.0, 1.0);
	float border = max(border_uv.x, border_uv.y);
	border = ceil(1.0 - border);
	tex.a *= border;
	
	COLOR = tex;
}
"

[sub_resource type="FastNoiseLite" id="6"]

[sub_resource type="NoiseTexture2D" id="7"]
noise = SubResource("6")

[sub_resource type="FastNoiseLite" id="8"]
seed = 1

[sub_resource type="NoiseTexture2D" id="9"]
as_normal_map = true
noise = SubResource("8")

[sub_resource type="ShaderMaterial" id="10"]
shader = SubResource("5")
shader_parameter/progress = 0.0
shader_parameter/strength = 2.0
shader_parameter/noise_tex_normal = SubResource("9")
shader_parameter/noise_tex = SubResource("7")

[sub_resource type="Animation" id="11"]
resource_name = "Explode"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("ShaderControls/VBoxContainer/Option3Controls/HBoxContainer/Option3Slider:value")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 1.0]
}

[sub_resource type="Animation" id="12"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("ShaderControls/VBoxContainer/Option3Controls/HBoxContainer/Option3Slider:value")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_bmi0q"]
_data = {
"Explode": SubResource("11"),
"RESET": SubResource("12")
}

[node name="PixelExplosion" type="Node2D"]
script = ExtResource("1")

[node name="AboutNode2D" type="Node2D" parent="."]
position = Vector2(18, 16)

[node name="VBoxContainer" type="VBoxContainer" parent="AboutNode2D"]
offset_right = 40.0
offset_bottom = 40.0

[node name="CreatedByLabel" type="Label" parent="AboutNode2D/VBoxContainer"]
layout_mode = 2
text = "Shader Created By: Elid Elid"

[node name="ProvidedByLabel" type="Label" parent="AboutNode2D/VBoxContainer"]
layout_mode = 2
focus_mode = 2
text = "Shader Hosted By: godotshaders.com"

[node name="DemoByLabel" type="Label" parent="AboutNode2D/VBoxContainer"]
layout_mode = 2
focus_mode = 2
text = "Shader Demo By: GrayDwarf"

[node name="Sprite2D" type="Sprite2D" parent="."]
material = SubResource("10")
position = Vector2(173, 244)
scale = Vector2(0.5, 0.5)
texture = ExtResource("2")
offset = Vector2(0, 6)

[node name="ShaderControls" type="Node2D" parent="."]
position = Vector2(331, 89)

[node name="VBoxContainer" type="VBoxContainer" parent="ShaderControls"]
custom_minimum_size = Vector2(400, 200)
offset_top = 1.0
offset_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_constants/separation = 5

[node name="Option3Controls" type="Control" parent="ShaderControls/VBoxContainer"]
custom_minimum_size = Vector2(400, 32)
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="ShaderControls/VBoxContainer/Option3Controls"]
custom_minimum_size = Vector2(400, 32)
layout_mode = 0
offset_right = 219.0
offset_bottom = 32.0
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_constants/separation = 10

[node name="Option3Label" type="Label" parent="ShaderControls/VBoxContainer/Option3Controls/HBoxContainer"]
custom_minimum_size = Vector2(100, 0)
layout_mode = 2
text = "Progress:"

[node name="Option3Slider" type="HSlider" parent="ShaderControls/VBoxContainer/Option3Controls/HBoxContainer"]
custom_minimum_size = Vector2(100, 32)
layout_mode = 2
max_value = 1.0
step = 0.01
allow_greater = true
allow_lesser = true
ticks_on_borders = true

[node name="Option3LineEdit" type="LineEdit" parent="ShaderControls/VBoxContainer/Option3Controls/HBoxContainer"]
custom_minimum_size = Vector2(100, 32)
layout_mode = 2
text = "0"
max_length = 5
caret_blink = true

[node name="Option4Controls" type="Control" parent="ShaderControls/VBoxContainer"]
custom_minimum_size = Vector2(400, 32)
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="ShaderControls/VBoxContainer/Option4Controls"]
custom_minimum_size = Vector2(400, 0)
layout_mode = 0
offset_right = 219.0
offset_bottom = 32.0
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_constants/separation = 10

[node name="Option4Label" type="Label" parent="ShaderControls/VBoxContainer/Option4Controls/HBoxContainer"]
custom_minimum_size = Vector2(100, 0)
layout_mode = 2
text = "Strength:"

[node name="Option4HSlider" type="HSlider" parent="ShaderControls/VBoxContainer/Option4Controls/HBoxContainer"]
custom_minimum_size = Vector2(100, 32)
layout_mode = 2
max_value = 5.0
step = 0.01
value = 5.0
allow_greater = true
allow_lesser = true
ticks_on_borders = true

[node name="Option4LineEdit" type="LineEdit" parent="ShaderControls/VBoxContainer/Option4Controls/HBoxContainer"]
custom_minimum_size = Vector2(100, 32)
layout_mode = 2
text = "5"
max_length = 5
caret_blink = true

[node name="Option5Controls" type="Control" parent="ShaderControls/VBoxContainer"]
custom_minimum_size = Vector2(400, 32)
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="ShaderControls/VBoxContainer/Option5Controls"]
custom_minimum_size = Vector2(400, 0)
layout_mode = 0
offset_right = 219.0
offset_bottom = 32.0
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_constants/separation = 10

[node name="Option5Label" type="Label" parent="ShaderControls/VBoxContainer/Option5Controls/HBoxContainer"]
custom_minimum_size = Vector2(100, 0)
layout_mode = 2
text = "Animate:"

[node name="Option5Button" type="Button" parent="ShaderControls/VBoxContainer/Option5Controls/HBoxContainer"]
custom_minimum_size = Vector2(100, 32)
layout_mode = 2
text = "Start"

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_bmi0q")
}

[connection signal="value_changed" from="ShaderControls/VBoxContainer/Option3Controls/HBoxContainer/Option3Slider" to="." method="_on_Option3Slider_value_changed"]
[connection signal="text_changed" from="ShaderControls/VBoxContainer/Option3Controls/HBoxContainer/Option3LineEdit" to="." method="_on_Option3LineEdit_text_changed"]
[connection signal="value_changed" from="ShaderControls/VBoxContainer/Option4Controls/HBoxContainer/Option4HSlider" to="." method="_on_Option4HSlider_value_changed"]
[connection signal="text_changed" from="ShaderControls/VBoxContainer/Option4Controls/HBoxContainer/Option4LineEdit" to="." method="_on_Option4LineEdit_text_changed"]
[connection signal="pressed" from="ShaderControls/VBoxContainer/Option5Controls/HBoxContainer/Option5Button" to="." method="_on_Option5Button_pressed"]
